
import type { MathNode } from 'mathjs';

// The `isDerived` property is used to distinguish points created by the user
// from points generated by analysis tools (like Roots, Intersect, etc.).
export type Point = {
  id: string;
  type: 'point';
  x: number;
  y: number;
  label: string;
  isDerived?: boolean;
};

export type Func = {
  id: string;
  type: 'function';
  expression: string;
  compiled: ReturnType<MathNode['compile']>;
  color: string;
};

export type Slider = {
  id: string;
  type: 'slider';
  name: string;
  min: number;
  max: number;
  step: number;
  value: number;
};

export type Segment = {
    id: string;
    type: 'segment';
    point1Id: string;
    point2Id: string;
    color: string;
};

export type Measurement = {
    id: string;
    type: 'measurement';
    label: string;
    x: number;
    y: number;
};

export type Polygon = {
    id: string;
    type: 'polygon';
    pointIds: string[];
    color: string;
}

export type Angle = {
    id: string;
    type: 'angle';
    vertexPointId: string;
    arm1PointId: string;
    arm2PointId: string;
    color: string;
};


export type GraphObject = Point | Func | Slider | Segment | Measurement | Polygon | Angle;
